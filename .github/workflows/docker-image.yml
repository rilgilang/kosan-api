name: Deploy Go App with GitHub Container Registry

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: "ghcr.io/${{ github.repository }}/kosan-api"
  VPS_APP_PATH: "~/gilang/kosan-api"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t $IMAGE_NAME:latest -f deployment/Dockerfile .
          docker push $IMAGE_NAME:latest

      - name: Set up SSH and Sync Files to VPS
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

          # Sync the latest docker-compose.yaml to VPS
          scp deployment/docker-compose.yaml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:$VPS_APP_PATH/

      - name: Deploy on VPS
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ~/gilang/kosan-api

            # Log in to GitHub Container Registry (only required once)
            echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Pull the latest image
            docker-compose pull

            # Restart the container
            docker-compose up -d --remove-orphans

            # Remove old unused images
            docker image prune -f
          EOF
