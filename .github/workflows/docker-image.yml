name: Deploy Go App with Docker Compose

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: "kosan-api"
  VPS_APP_PATH: "~/gilang/kosan-api"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t $IMAGE_NAME:latest -f deployment/Dockerfile .

      - name: Save Docker Image
        run: |
          docker save -o $IMAGE_NAME.tar $IMAGE_NAME:latest

      - name: Transfer Docker Image to VPS
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

          scp $IMAGE_NAME.tar ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:$VPS_APP_PATH/

      - name: Deploy on VPS
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ~/gilang/kosan-api

            # Load new Docker image
            docker load -i kosan-api.tar

            # Stop and remove old containers
            docker compose -f deployment/docker-compose.yaml down

            # Start new containers with the updated image
            docker compose -f deployment/docker-compose.yaml up -d --build

            # Remove old Docker images to free space
            docker image prune -f
          EOF
